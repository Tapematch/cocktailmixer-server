/* CSS declarations go here */
body.pushable>.pusher {
    background: #fafafa !important;
}

.text.container {
    margin: 2em 0 1em 0;
}

.main.container {
    margin: 5em 0 1em 0;
}

.logo-img{
    width: 26px !important;
    margin-right: 10px !important;
}

p {
    color: rgba(0, 0, 0, 0.87) !important;
}

.ui.menu.fixed {
    z-index: 2000 !important;
}

.cocktail-image{
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.ui.image.top.right.attached.label img {
    border-radius: 0em 0em 0em 0.28571429rem;
    height: 2.3em !important;
}

.ui[class*="top attached image"].label, .ui.attached.image.label {
    padding: 0.5833em 0.833em 0.5833em 0.5em;
}

.ui.raised.attached.segment, .ui.attached.raised.button {
    box-shadow: 0px 2px 4px 0px rgba(34, 36, 38, 0.12), 0px 2px 10px 0px rgba(34, 36, 38, 0.15) !important;
}

#upload-picture-input {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
}

label[for=upload-picture-input], label[for=upload-picture-input] i:before{
    cursor: pointer;
}

.ui.card > .content .star.icon {
    padding-top: 2px;
}

.attached.segment > .ui.header {
    margin: 0 !important;
}

.ui.statistic>.value>span, .ui.statistics .statistic>.value>span {
    font-size: 1.5rem !important;
    text-transform: none !important;
    line-height: 1rem !important;
}

.ui.three.statistics .statistic {
    margin: 0 0 0 0 !important;
}

.hidden.transition {
    display: none !important;
    visibility: hidden !important;
}

.ui.fitted.header{
    margin-top: 0.8em !important;
    margin-bottom: 0 !important;
}

.ui.fitted.header > .ui.label>.icon {
    width: auto;
    margin: 0 0 0 .75em !important;
}

.handle.bars.icon {
    cursor: move;
    cursor: -webkit-grabbing;
}
.ui.dropdown .menu>.secondary.item {
    opacity: .5;
}

.title:not(.active) > .ui.header {
    margin: 0 0 0 !important;
}

.active.title > .ui.header {
    margin: 0 0 1rem !important;
}

.right.floated.dropdown.icon {
    float: right !important;
    margin: .21425em 0 0 1em !important;
}

.ui.accordion .title:not(.ui) {
    padding: 0 !important;
}

.ui.accordion .title:not(.active) .right.floated.dropdown.icon {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
}

.ui.card>.content .star.icon:hover, .ui.cards>.card>.content .star.icon:hover {
    opacity: 1;
    color: #000 !important;
}
.ui.card>.content .yellow.star.icon:hover, .ui.cards>.card>.content .yellow.star.icon:hover {
    opacity: 1;
    color: #fbbd08!important;
}

.inline.icon {
    display: inline-block !important;
    font-size: .75em !important;
    line-height: 0.8em !important;
    padding-left: 0.2em !important;
}
/* Mobile */

@media only screen and (max-width: 767px) {
    .ui.menu .mobile.item > i.icon {
        margin: 0em !important;
    }
    .ui.menu .mobile.item > span {
        display: none !important;
    }
}

@media only screen and (max-width: 767px) {
    .ui.stackable.grid > .row > .wide.column, .ui.stackable.grid > .wide.column, .ui.stackable.grid > .column.grid > .column, .ui.stackable.grid > .column.row > .column, .ui.stackable.grid > .row > .column, .ui.stackable.grid > .column:not(.row), .ui.grid > .stackable.stackable.row > .column {
        padding: 1rem 0 1rem 0 !important;
    }
    .ui.stackable.grid > .row > .wide.column, .ui.stackable.grid > .wide.column, .ui.stackable.grid > .column.grid > .column, .ui.stackable.grid > .column.row > .column, .ui.stackable.grid > .row > .column, .ui.stackable.grid > .column:not(.row), .ui.grid > .stackable.stackable.row > .column {
        padding: 0 0 1rem 0 !important;
    }

}

/*
.masonry.grid {
    display: block;
}

@media only screen and (min-width: 768px) {
    .masonry.grid {
        -webkit-column-count: 2;
        -moz-column-count: 2;
        column-count: 2;
        -webkit-column-gap: 0;
        -moz-column-gap: 0;
        column-gap: 0;
    }

    .ui.doubling.masonry.grid[class*="three column"] > .column {
        width: 100% !important;
    }
}

@media only screen and (min-width: 992px) {
    .masonry.grid {
        -webkit-column-count: 3;
        -moz-column-count: 3;
        column-count: 3;
    }
}
*/